/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author 7FPROG08
 */
public class GPreguntas extends javax.swing.JFrame {

    /**
     * Creates new form GPreguntas
     */
    private Connection conn;
    private int opcion;
    private int n = 0;
    private List<Pregunta> pre = new ArrayList<>();
    private List<Categoria> cat = new ArrayList<>();
    
    public GPreguntas(int opcion) throws SQLException {
        this.opcion = opcion;
        
        initComponents();
        
        DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
        //conn = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");
        //conn = DriverManager.getConnection("jdbc:oracle:thin:@SrvOracle:1521:orcl", "noc08", "noc08");
        conn = DriverManager.getConnection("jdbc:oracle:thin:@192.168.2.2:1521:orcl", "SYSTEM", "root");
        System.out.println("INFO: Conexión abierta");
        
        Statement stmt = conn.createStatement();
            ResultSet rset = stmt.executeQuery("select * from categorias");
            while (rset.next()) {
                Categoria c = new Categoria();
                c.setId(Integer.parseInt(rset.getString(1)));
                c.setNombre(rset.getString(2));
                cat.add(c);
            }
            stmt.close();
            
        int i;
        stmt = conn.createStatement();
        rset = stmt.executeQuery("select * from preguntas");
            while (rset.next()) {
                Pregunta p = new Pregunta();
                p.setId(Integer.parseInt(rset.getString(1)));
                p.setTexto(rset.getString(2));
                i = Integer.parseInt(rset.getString(3));
                p.setCategoria(cat.get(i-1));
                pre.add(p);
            }
            stmt.close();
            
            jcbCategoriaCB.removeAllItems();
                for (Categoria cate : cat) {
                    jcbCategoriaCB.addItem(cate.getNombre());
                }
            
        switch (opcion) {
            case 0:
                jtfID.setText(String.valueOf(pre.get(n).getId()));
                jtfTexto.setText(pre.get(n).getTexto());
                jtfCategoria.setText(pre.get(n).getCategoria().getNombre());
                jtfID.setEditable(false);
                jtfTexto.setEditable(false);
                jtfCategoria.setEditable(false);
                jbLimpiar.setVisible(false);
                jlCategoriaCB.setVisible(false);
                jcbCategoriaCB.setVisible(false);
                break;
            case 1:
                jbAtras.setVisible(false);
                jbAlante.setVisible(false);
                jtfID.setEnabled(false);
                jlCategoria.setVisible(false);
                jtfCategoria.setVisible(false);
                break;
            case 2:
                jtfID.setText(String.valueOf(pre.get(n).getId()));
                jtfTexto.setText(pre.get(n).getTexto());
                jtfCategoria.setText(pre.get(n).getCategoria().getNombre());
                jtfID.setEditable(false);
                jtfCategoria.setEditable(false);
                jlCategoriaCB.setVisible(false);
                jcbCategoriaCB.setVisible(false);
                break;
            case 3:
                jtfID.setText(String.valueOf(pre.get(n).getId()));
                jtfTexto.setText(pre.get(n).getTexto());
                jtfCategoria.setText(pre.get(n).getCategoria().getNombre());
                jtfID.setEditable(false);
                jtfTexto.setEditable(false);
                jtfCategoria.setEditable(false);
                jbLimpiar.setVisible(false);
                jlCategoriaCB.setVisible(false);
                jcbCategoriaCB.setVisible(false);
                break;
            default:
                throw new AssertionError();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfTexto = new javax.swing.JTextField();
        jlCategoria = new javax.swing.JLabel();
        jtfCategoria = new javax.swing.JTextField();
        jbAlante = new javax.swing.JButton();
        jbAtras = new javax.swing.JButton();
        jlCategoriaCB = new javax.swing.JLabel();
        jcbCategoriaCB = new javax.swing.JComboBox();
        jbAceptar = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("ID");

        jLabel2.setText("Texto");

        jlCategoria.setText("Categoría");

        jbAlante.setText(">");
        jbAlante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlanteActionPerformed(evt);
            }
        });

        jbAtras.setText("<");
        jbAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtrasActionPerformed(evt);
            }
        });

        jlCategoriaCB.setText("Categoría");

        jcbCategoriaCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbAtras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlCategoriaCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbCategoriaCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGap(23, 23, 23)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtfTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jlCategoria)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfCategoria))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jbAlante)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlante)
                    .addComponent(jbAtras))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCategoria)
                    .addComponent(jtfCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCategoriaCB)
                    .addComponent(jcbCategoriaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbAceptar.setText("Aceptar");
        jbAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAceptarActionPerformed(evt);
            }
        });

        jbLimpiar.setText("Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbAceptar))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAceptar)
                    .addComponent(jbLimpiar)
                    .addComponent(jbCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtrasActionPerformed
        // TODO add your handling code here:
        if (n > 0) {
            n-=1;
            jtfID.setText(String.valueOf(pre.get(n).getId()));
            jtfTexto.setText(pre.get(n).getTexto());
            jtfCategoria.setText(pre.get(n).getCategoria().getNombre());
        }
    }//GEN-LAST:event_jbAtrasActionPerformed

    private void jbAlanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlanteActionPerformed
        // TODO add your handling code here:
        if (n < pre.size()-1) {
            n+=1;
            jtfID.setText(String.valueOf(pre.get(n).getId()));
            jtfTexto.setText(pre.get(n).getTexto());
            jtfCategoria.setText(pre.get(n).getCategoria().getNombre());
        }
    }//GEN-LAST:event_jbAlanteActionPerformed

    private void jbAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAceptarActionPerformed
        // TODO add your handling code here:
        switch (opcion) {
            case 0:
                this.dispose();
                break;
            case 1:
                String categoria = String.valueOf(jcbCategoriaCB.getSelectedItem());
                String sql = "{ CALL GEST_PROYECTO_GIFT.INSERT_PREGUNTA(?,?) }";
                CallableStatement cs;
                try {
                    cs = conn.prepareCall(sql);
                    cs.setString(1, categoria);
                    cs.setString(2, jtfTexto.getText());
                    cs.execute();
                    conn.close();
                    System.out.println("INFO: Procedimiento ejecutado");
                } catch (SQLException ex) {
                    System.out.println("ERROR: No se ha podido ejecutar la consulta");
                    Logger.getLogger(GCategorias.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.dispose();
                break;
            case 2:
                sql = "{ CALL GEST_PROYECTO_GIFT.UPDATE_PREGUNTA(?,?) }";
                try {
                    cs = conn.prepareCall(sql);
                    cs.setInt(1, pre.get(n).getId());
                    cs.setString(2, jtfTexto.getText());
                    cs.execute();
                    conn.close();
                    System.out.println("INFO: Procedimiento ejecutado");
                } catch (SQLException ex) {
                    System.out.println("ERROR: No se ha podido ejecutar la consulta");
                    Logger.getLogger(GCategorias.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.dispose();
                break;
            case 3:
                sql = "{ CALL GEST_PROYECTO_GIFT.DELETE_PREGUNTA(?) }";
                try {
                    cs = conn.prepareCall(sql);
                    cs.setInt(1, pre.get(n).getId());
                    cs.execute();
                    conn.close();
                    System.out.println("INFO: Procedimiento ejecutado");
                } catch (SQLException ex) {
                    System.out.println("ERROR: No se ha podido ejecutar la consulta");
                    Logger.getLogger(GCategorias.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                this.dispose();
                break;
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_jbAceptarActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        // TODO add your handling code here:
        jtfID.setText("");
        jtfTexto.setText("");
        jtfCategoria.setText("");
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(GCategorias.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbAceptar;
    private javax.swing.JButton jbAlante;
    private javax.swing.JButton jbAtras;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JComboBox jcbCategoriaCB;
    private javax.swing.JLabel jlCategoria;
    private javax.swing.JLabel jlCategoriaCB;
    private javax.swing.JTextField jtfCategoria;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfTexto;
    // End of variables declaration//GEN-END:variables
}
